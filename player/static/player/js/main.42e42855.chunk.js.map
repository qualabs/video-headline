{
  "version": 3,
  "sources": [
    "utils.js",
    "App.js",
    "index.js"
  ],
  "names": [
    "checkBoolString",
    "boolValue",
    "toLowerCase",
    "App",
    "url",
    "window",
    "qhub_analytics_enabled",
    "qhub_analytics_plugin_url",
    "Promise",
    "resolve",
    "reject",
    "script",
    "document",
    "createElement",
    "type",
    "src",
    "tag",
    "getElementsByTagName",
    "appendChild",
    "onload",
    "onerror",
    "playerInstance",
    "QhubAnalytics",
    "organization_id",
    "qhub_analytics_organization_id",
    "organization_name",
    "qhub_analytics_organization_name",
    "channel_id",
    "qhub_analytics_channel_id",
    "channel_name",
    "qhub_analytics_channel_name",
    "content_id",
    "qhub_analytics_content_id",
    "content_title",
    "qhub_analytics_content_title",
    "tags",
    "qhub_analytics_tags",
    "on",
    "error",
    "code",
    "ua",
    "UAParser",
    "navigator",
    "userAgent",
    "os",
    "name",
    "version",
    "browser",
    "major",
    "message",
    "token",
    "tech",
    "hls",
    "xhr",
    "beforeRequest",
    "options",
    "uri",
    "concat",
    "parsedParams",
    "queryString",
    "parse",
    "location",
    "search",
    "detectAdblock",
    "autoplay",
    "params",
    "laUrl",
    "laType",
    "certUrl",
    "adTagUrl",
    "posterUrl",
    "playerCustomCss",
    "onPlayerCreated",
    "this",
    "bind",
    "react_default",
    "a",
    "className",
    "index_es",
    "Component",
    "ReactDOM",
    "render",
    "App_App",
    "getElementById"
  ],
  "mappings": "oVAYS,SAASA,EAAiBC,GAC/B,OAAOA,GAAyC,SAA5BA,EAAUC,kBCNbC,8LDPd,IAAqBC,ECUpBJ,EAAgBK,OAAOC,yBAA2BD,OAAOE,4BDVrCH,ECWXC,OAAOE,0BDVb,IAAIC,QAAQ,SAACC,EAASC,GAE3B,IAAMC,EAASC,SAASC,cAAc,UACtCF,EAAOG,KAAO,kBACdH,EAAOI,IAAMX,EACb,IAAMY,EAAMJ,SAASK,qBAAqB,QAAQ,GAAGC,YAAYP,GACjEK,EAAIG,OAASV,EACbO,EAAII,QAAUV,6CCOFW,GAEVrB,EAAgBK,OAAOC,yBAA2Be,EAAeC,eACnED,EAAeC,cAAc,CAC3BC,gBAAiBlB,OAAOmB,+BACxBC,kBAAmBpB,OAAOqB,iCAC1BC,WAAYtB,OAAOuB,0BACnBC,aAAcxB,OAAOyB,4BACrBC,WAAY1B,OAAO2B,0BACnBC,cAAe5B,OAAO6B,6BACtBC,KAAM9B,OAAO+B,sBAIjBf,EAAegB,GAAG,QAAS,WACzB,GAAoC,IAAhChB,EAAeiB,QAAQC,KAAY,CACrC,IAAMC,EAAKC,IAASC,UAAUC,WAEX,YAAfH,EAAGI,GAAGC,MAAwC,MAAlBL,EAAGI,GAAGE,SAAuC,OAApBN,EAAGO,QAAQF,MAAsC,OAArBL,EAAGO,QAAQC,QAC9F3B,EAAeiB,MAAM,MACrBjB,EAAeiB,MAAM,CACnBC,KAAM,GACNU,QAAS,uHAMb5C,OAAO6C,OACT7B,EAAegB,GAAG,YAAa,WAC7BhB,EAAe8B,OAAOC,IAAIC,IAAIC,cAAgB,SAASC,GAErD,OADAA,EAAQC,IAAMD,EAAQC,IAAIC,OAAOpD,OAAO6C,OACjCK,sCAOb,IAAMG,EAAeC,IAAYC,MAAMvD,OAAOwD,SAASC,QACjDC,EAAgBL,EAAY,cAC5BM,EAAWN,EAAY,SACvBR,EAAQ7C,OAAO6C,OAAS,GAExBe,EAAS,CACb7D,IAAKsD,EAAY,KAAYrD,OAAOD,IAAIqD,OAAOP,GAC/CpC,KAAM4C,EAAY,MAAYrD,OAAOS,KACrCoD,MAAOR,EAAY,OAAarD,OAAO6D,MACvCC,OAAQT,EAAY,QAAcrD,OAAO8D,OACzCC,QAASV,EAAY,SAAerD,OAAO+D,QAC3CC,SAAUX,EAAY,UAAgBrD,OAAOgE,SAC7CC,UAAWZ,EAAY,WAAkBrD,OAAOiE,UAAUb,OAAOP,GACjEqB,gBAAiBb,EAAY,iBAAuBrD,OAAOkE,gBAC3DR,cAA+B/D,EAAhB+D,GAAiE1D,OAAO0D,eACvFC,SAAsBhE,EAAZgE,GAA2D3D,OAAO2D,UAC5EQ,gBAAiBC,KAAKD,gBAAgBE,KAAKD,OAG7C,OACEE,EAAAC,EAAA/D,cAAA,OAAKgE,UAAU,OACbF,EAAAC,EAAA/D,cAACiE,EAAA,EAAgBb,WApEQc,aCGjCC,IAASC,OAAON,EAAAC,EAAA/D,cAACqE,EAAD,MAAStE,SAASuE,eAAe",
  "file": "static/js/main.42e42855.chunk.js",
  "sourcesContent": [
    "export function loadScript (url) {\n    return new Promise((resolve, reject) => {\n      // Agrega un script en el head a prepo.\n      const script = document.createElement('script')\n      script.type = 'text/javascript'\n      script.src = url\n      const tag = document.getElementsByTagName('head')[0].appendChild(script)\n      tag.onload = resolve\n      tag.onerror = reject\n    })\n  }\n\n  export function checkBoolString (boolValue) {\n    return boolValue && boolValue.toLowerCase() === 'true'\n  }",
    "import React, { Component } from 'react'\nimport './App.css'\nimport queryString from 'query-string'\nimport UAParser from 'ua-parser-js'\nimport VideoPlayer from 'qualabs-player-web'\nimport {loadScript, checkBoolString} from './utils'\n\nexport default class App extends Component {\n\n  componentDidMount() {\n    if (checkBoolString(window.qhub_analytics_enabled) && window.qhub_analytics_plugin_url){\n      loadScript(window.qhub_analytics_plugin_url)\n    }\n  }\n\n  onPlayerCreated(playerInstance){\n    // Si cargo bien el plugin de QhubAnalytics lo usamos.\n    if (checkBoolString(window.qhub_analytics_enabled) && playerInstance.QhubAnalytics){\n      playerInstance.QhubAnalytics({\n        organization_id: window.qhub_analytics_organization_id,\n        organization_name: window.qhub_analytics_organization_name,\n        channel_id: window.qhub_analytics_channel_id,\n        channel_name: window.qhub_analytics_channel_name,\n        content_id: window.qhub_analytics_content_id,\n        content_title: window.qhub_analytics_content_title,\n        tags: window.qhub_analytics_tags // array\n      })\n    }\n    \n    playerInstance.on('error', () => {\n      if (playerInstance.error().code === 4) {\n        const ua = UAParser(navigator.userAgent)\n        // IE 11 en Windows 7\n        if (ua.os.name === 'Windows' && ua.os.version === '7' && ua.browser.name === 'IE' && ua.browser.major === '11') {\n          playerInstance.error(null)\n          playerInstance.error({\n            code: 41,\n            message: \"No se puede reproducir el video en este navegador. Se recomienda utilizar Google Chrome o Firefox actualizados\"\n          })\n        }\n      }\n    })\n    \n    if (window.token) {\n      playerInstance.on('loadstart', () => {\n        playerInstance.tech().hls.xhr.beforeRequest = function(options) {\n          options.uri = options.uri.concat(window.token)\n          return options\n        }\n      })\n    }\n  }\n\n  render () {\n    const parsedParams = queryString.parse(window.location.search)\n    const detectAdblock = parsedParams['detectadblock']\n    const autoplay = parsedParams['autoplay']\n    const token = window.token || ''\n\n    const params = {\n      url: parsedParams['url'] || (window.url.concat(token)),\n      type: parsedParams['type'] || window.type,\n      laUrl: parsedParams['laurl'] || window.laUrl,\n      laType: parsedParams['latype'] || window.laType,\n      certUrl: parsedParams['certurl'] || window.certUrl,\n      adTagUrl: parsedParams['adtagurl'] || window.adTagUrl,\n      posterUrl: parsedParams['posterurl'] || (window.posterUrl.concat(token)),\n      playerCustomCss: parsedParams['playerCustomCss'] || window.playerCustomCss,\n      detectAdblock: detectAdblock ? checkBoolString(detectAdblock) : checkBoolString(window.detectAdblock),\n      autoplay: autoplay ? (checkBoolString(autoplay)) : ( checkBoolString(window.autoplay)),\n      onPlayerCreated: this.onPlayerCreated.bind(this),\n    }\n\n    return (\n      <div className='App'>\n        <VideoPlayer {...params} />\n      </div>\n    )\n  }\n}\n",
    "import 'react-app-polyfill/ie11'\nimport 'react-app-polyfill/stable'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n"
  ],
  "sourceRoot": ""
}
