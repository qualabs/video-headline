"""
Django settings for video_hub project.

Generated by 'django-admin startproject' using Django 2.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import sys

# SECURITY WARNING: don't run with debug turned on in production!

DEBUG = os.getenv('DEBUG', False) == 'True'
TESTING_MODE = 'test' in sys.argv

# Environment Variables
DATABASE_HOST = os.getenv('DATABASE_HOST')
DATABASE_PORT = os.getenv('DATABASE_PORT')
DATABASE_USER = os.getenv('DATABASE_USER')
DATABASE_PASSWORD = os.getenv('DATABASE_PASSWORD')
REDIS_URL = os.getenv('REDIS_HOST')
APM_SERVICE_NAME = os.getenv('APM_SERVICE_NAME')
APM_SECRET_TOKEN = os.getenv('APM_SECRET_TOKEN')
APM_SERVER_URL = os.getenv('APM_SERVER_URL')
APM_DEBUG = os.getenv('APM_DEBUG', False) == 'True'
CONN_MAX_AGE = os.getenv('CONN_MAX_AGE', None)
BASE_URL = os.getenv('BASE_URL')

if CONN_MAX_AGE:
    CONN_MAX_AGE = int(CONN_MAX_AGE)

# TODO: delete this env setting after all aws keys are in the django models
AWS_MEDIA_CONVERT_ROLE = os.getenv('AWS_MEDIA_CONVERT_ROLE')
AWS_MEDIA_LIVE_ROLE = os.getenv('AWS_MEDIA_LIVE_ROLE')

print(f"""
-- Settings : {os.getenv('DJANGO_SETTINGS_MODULE')} --
Debug:          {DEBUG}
Database:       {DATABASE_HOST}:{DATABASE_PORT}
Redis:          {REDIS_URL}
MediaConvert Role:  {AWS_MEDIA_CONVERT_ROLE}
MediaLive Role: {AWS_MEDIA_LIVE_ROLE}
""")

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'd64cr-0nwqu(lcyex)9$5&@1r8*1^qs+0uwv(8s$5!d!a6x(9p'

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # 3rd Party Apps
    'debug_toolbar',
    'related_admin',
    'solo',
    'django_celery_beat',
    'django_extensions',
    'rest_framework',
    'rest_framework_swagger',
    'knox',
    'drf_generators',
    'django_filters',

    # Local
    'configuration',
    'hub_auth',
    'organization',
    'video',
    'player',
]

# Enable APM only if we have SERVER_URL
MIDDLEWARE = []
if APM_SERVER_URL:
    INSTALLED_APPS += ['elasticapm.contrib.django']
    MIDDLEWARE = ['elasticapm.contrib.django.middleware.TracingMiddleware']

MIDDLEWARE += [
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'api.middleware.SNSMiddleware',
    # 'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'video_hub.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'video_hub.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

if DATABASE_HOST:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': 'db_video_hub',
            'CONN_MAX_AGE': CONN_MAX_AGE,
            'USER': DATABASE_USER,
            'PASSWORD': DATABASE_PASSWORD,
            'HOST': DATABASE_HOST,
            'PORT': DATABASE_PORT,
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }

# ELASTIC APM
ELASTIC_APM = {
    'DEBUG': APM_DEBUG,
    'SERVICE_NAME': APM_SERVICE_NAME,  # Allowed characters: a-z, A-Z, 0-9, -, _, and space
    'SECRET_TOKEN': APM_SECRET_TOKEN,
    'SERVER_URL': APM_SERVER_URL,
}

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_URL = '/api_static/'

# Media files (Files uploaded in Model Fields)
# https://docs.djangoproject.com/en/2.1/topics/files/

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

# Custom User Model
AUTH_USER_MODEL = 'hub_auth.Account'

# Django REST Framework Settings
# https://www.django-rest-framework.org/api-guide/settings/

REST_FRAMEWORK = {
    'PAGE_SIZE': 30,
    'TEST_REQUEST_DEFAULT_FORMAT': 'json',
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    # 'DEFAULT_PAGINATION_CLASS': 'api.pagination.PageNumberPaginationWithoutCount',
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'knox.auth.TokenAuthentication',
        'hub_auth.authentication.CsrfExemptSessionAuthentication',
        'hub_auth.authentication.APIKeyAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.AutoSchema',
    'DEFAULT_FILTER_BACKENDS': (
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.SearchFilter',
        'rest_framework.filters.OrderingFilter'
    ),
}

# Rest Framework Swagger
# https://django-rest-swagger.readthedocs.io/en/latest/settings/

SWAGGER_SETTINGS = {
    'LOGIN_URL': 'rest_framework:login',
    'LOGOUT_URL': 'rest_framework:logout',
    'JSON_EDITOR': True,
    'SHOW_REQUEST_HEADERS': True
}

# Celery Configuration
CELERY_BROKER_URL = REDIS_URL
CELERY_RESULT_BACKEND = REDIS_URL
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = TIME_ZONE
CELERY_ALWAYS_EAGER = False

CELERY_TASK_ROUTES = {
    'utils.mediaconvert.check_job_status': {'queue': 'transcode'},
}

# Generic domains that are allowed to play the videos
ALLOWED_DOMAINS = [
    'www.videoheadline.com',
    'app.videoheadline.com',
    'qhub.qualabs.com',
    'hub.qualabs.com',
    'localhost'
]

# Django Toolbar
if DEBUG and not TESTING_MODE:
    INTERNAL_IPS = [
        '127.0.0.1',
    ]

    DEBUG_TOOLBAR_CONFIG = {
        'SHOW_COLLAPSED': True,
        'SHOW_TOOLBAR_CALLBACK': lambda r: DEBUG
    }
