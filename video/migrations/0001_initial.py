# Generated by Django 2.1.5 on 2023-10-16 17:32

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_fsm
import jsonfield.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organization', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LiveVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_id', models.CharField(db_index=True, default=uuid.uuid4, max_length=36, unique=True, verbose_name='Video ID')),
                ('name', models.CharField(max_length=254, verbose_name='Name')),
                ('state', django_fsm.FSMField(choices=[('off', 'off'), ('on', 'on'), ('starting', 'starting'), ('stopping', 'stopping')], default='off', max_length=50, protected=True, verbose_name='Live Video state')),
                ('input_state', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(default='', max_length=255, verbose_name='Origin state'), blank=True, default=list, size=None)),
                ('metadata', jsonfield.fields.JSONField(blank=True, default=dict, max_length=500, verbose_name='Metadata')),
                ('ads_vast_url', models.URLField(blank=True, max_length=1024, null=True, verbose_name='VAST URL (ads)')),
                ('enable_ads', models.BooleanField(default=True, verbose_name='Enable Ads?')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created')),
                ('ml_input_url', models.CharField(default='', editable=False, max_length=254, verbose_name='Input Url')),
                ('ml_input_id', models.CharField(default='', editable=False, max_length=36, verbose_name='Input Id')),
                ('ml_channel_arn', models.CharField(default='', editable=False, max_length=254, verbose_name='Channel Arn')),
                ('sns_topic_arn', models.CharField(default='', editable=False, max_length=254, verbose_name='Topic Arn')),
                ('autoplay', models.CharField(choices=[('c', 'Channel'), ('y', 'Yes'), ('n', 'No')], default='c', max_length=1, verbose_name='Autoplay?')),
                ('cf_id', models.CharField(default='', editable=False, max_length=100, verbose_name='Cf_id')),
                ('cf_domain', models.CharField(default='', editable=False, max_length=100, verbose_name='Cf_domain')),
                ('geolocation_type', models.CharField(choices=[('whitelist', 'whitelist'), ('blacklist', 'blacklist'), ('none', 'none')], default='none', max_length=20, verbose_name='Geolocation Type')),
                ('geolocation_countries', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(default='', max_length=2, verbose_name='Geolocation Countries'), blank=True, default=list, size=None)),
                ('channel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='live_videos', to='organization.Channel', verbose_name='Channel')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_live_video', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='live_videos', to='organization.Organization', verbose_name='Organization')),
            ],
            options={
                'verbose_name': 'Live Video',
                'verbose_name_plural': 'Live Videos',
            },
        ),
        migrations.CreateModel(
            name='LiveVideoCut',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initial_time', models.DateTimeField(blank=True, null=True, verbose_name='Cut start time')),
                ('final_time', models.DateTimeField(blank=True, null=True, verbose_name='Cut end time')),
                ('description', models.CharField(default='', max_length=200, verbose_name='Cut reason')),
                ('state', django_fsm.FSMField(choices=[('scheduled', 'scheduled'), ('executing', 'executing'), ('performed', 'performed')], default='scheduled', max_length=50, protected=True, verbose_name='Cut state')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_live_video_cut', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('live', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cuts', to='video.LiveVideo', verbose_name='Video related to the cut')),
            ],
            options={
                'verbose_name': 'Live Video Cut',
                'verbose_name_plural': 'Live Video Cuts',
            },
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_id', models.CharField(db_index=True, default=uuid.uuid4, max_length=36, unique=True, verbose_name='Content ID')),
                ('name', models.CharField(max_length=254, verbose_name='Name')),
                ('state', django_fsm.FSMField(choices=[('waiting_file', 'waiting_file'), ('queuing_failed', 'queuing_failed'), ('queued', 'queued'), ('processing', 'processing'), ('processing_failed', 'processing_failed'), ('finished', 'finished')], default='waiting_file', max_length=50, protected=True, verbose_name='Video State')),
                ('metadata', jsonfield.fields.JSONField(blank=True, default={}, max_length=500, verbose_name='Metadata')),
                ('ads_vast_url', models.URLField(blank=True, max_length=1024, null=True, verbose_name='VAST URL (ads)')),
                ('enable_ads', models.BooleanField(default=True, verbose_name='Enable Ads?')),
                ('autoplay', models.CharField(choices=[('c', 'Channel'), ('y', 'Yes'), ('n', 'No')], default='c', max_length=1, verbose_name='Autoplay?')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created')),
                ('media_type', models.CharField(choices=[('audio', 'Audio'), ('video', 'Video')], default='video', max_length=5, verbose_name='Content Type')),
                ('has_thumbnail', models.BooleanField(default=False, verbose_name='Has custom thumbnail?')),
                ('storage', models.BigIntegerField(default=0, verbose_name='Size in bytes')),
                ('duration', models.IntegerField(default=0, verbose_name='Duration in seconds')),
                ('channel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='media', to='organization.Channel', verbose_name='Channel')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_videos', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media', to='organization.Organization', verbose_name='Organization')),
            ],
            options={
                'verbose_name': 'Content',
                'verbose_name_plural': 'Contents',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=254, verbose_name='Name')),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='organization.Organization', verbose_name='Organization')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.AddField(
            model_name='media',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='media', to='video.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='livevideo',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='live_videos', to='video.Tag', verbose_name='Tags'),
        ),
        migrations.AlterUniqueTogether(
            name='tag',
            unique_together={('name', 'organization')},
        ),
    ]
